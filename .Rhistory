var(0.75,12)
var(0.75)
?var
?dbinom
rbinom(1000, 12, 0.25)
var(rbinom(1000, 12, 0.25))
mean(rbinom(1000, 12, 0.25))
format(round(var(rbinom(1000, 12, 0.25)), 2), nsmall = 2)
format(round(var(rbinom(1000, 12, 0.25)), 2), nsmall = 3)
format(round(var(rbinom(1000, 12, 0.25)), 3), nsmall = 2)
dbinom(2,12,0.25)
round(dbinom(2,12,0.25), digits = 3)
round(var(rbinom(1000, 12, 0.25)), digits = 2)
round(mean(rbinom(1000, 12, 0.25)), digits = 2)
1 - (pbinom(3, 12, 0.25))
round(1 - (pbinom(3, 12, 0.25))), digits = 4)
round(1 - (pbinom(3, 12, 0.25)), digits = 4)
library(readxl)
Untitled_spreadsheet <- read_excel("C:/Users/alexw/Downloads/Untitled spreadsheet.xlsx")
View(Untitled_spreadsheet)
mean <- mean(Untitled_spreadsheet$`# of grads who remained in same job`)
n <- length(Untitled_spreadsheet$`# of grads who remained in same job`)
standard_deviation <- ss(Untitled_spreadsheet$`# of grads who remained in same job`)
standard_deviation <- sd(Untitled_spreadsheet$`# of grads who remained in same job`)
standard_error <- standard_deviation / sqrt(n)
alpha = 0.05
degrees_of_freedom = n - 1
t_score = qt(p=alpha/2, df=degrees_of_freedom,lower.tail=F)
margin_error <- t_score * standard_error
lower_bound <- mean_value - margin_error
lower_bound <- mean - margin_error
upper_bound <- mean + margin_error
library(readxl)
Graduates <- read_excel("C:/Users/alexw/Downloads/Untitled spreadsheet.xlsx",
col_types = c("skip", "numeric", "numeric"))
View(Graduates)
l_model <- lm($'1' ~ 1, Graduates)
l_model <- lm('# of grads who remained in same job' ~ 1, Graduates)
confint(Graduates, level=0.95)
confint(Graduates, level=0.95)
load("C:/Users/alexw/Downloads/BIOL236bioinformatics-20241010T053100Z-001/BIOL236bioinformatics/.RData")
package(phyloseq)
library(phyloseq)
setwd("\\\\stustocoiscifs1.student.vuw.ac.nz/users$/username/BIOL236
bioinformatics")
setwd("C:\Users\alexw\Downloads\BIOL236bioinformatics-20241010T053100Z-001\BIOL236bioinformatics")
library(phyloseq)
install.packages("phyloseq", dependencies=TRUE)
data2 <- read.csv('Part2_model_results.csv')
data2 <- read.csv('part2_model_results.csv')
setwd('C:/Users/alexw/Assignments/AIML331/AIML331_Assignment3')
data2 <- read.csv('part2_model_results.csv')
data2
model <- lm(accuracy ~ pos_embedding + patch_size + num_layers, data = data2)
summary(model)
learnable_data <- mean(data2[data$pos_embedding == 5, "Learnable"])
learnable_data <- mean(data2[data$pos_embedding == "Learnable"])
learnable_data <- mean(data2[data2$pos_embedding == "Learnable"])
learnable_data <- data2[data2$pos_embedding == "Learnable"]
learnable_data <- data2$pos_embedding == "Learnable"
learnable_data
learnable_data <- data2[data2$pos_embedding == "Fixed", ]
learnable_data
learnable_data <- data2[data2$pos_embedding == "Learnable", ]
learnable_data
model <- lm(accuracy ~ patch_size + num_layers, data = learnable_data)
learnable_data
learnable_data$num_layers <- as.factor(learnable_data$num_layers)
learnable_data$patch_size <- as.factor(learnable_data$patch_size)
model <- lm(accuracy ~ patch_size + num_layers, data = learnable_data)
summary(model)
learnable_data <- data2[data2$pos_embedding == "Learnable", ]
model <- lm(accuracy ~ patch_size + num_layers, data = learnable_data)
summary(model)
data <- read.csv('Part1_model_results.csv')
data2 <- read.csv('part2_model_results.csv')
data
data$activation <- as.factor(data$activation)
data$residuals <- as.factor(data$residuals)
data$batch_normalisation <- as.factor(data$batch_normalisation)
model <- lm(accuracy ~ batch_normalisation + residuals + num_layers + activation, data = data)
summary(model)
median_3_accuracy <- mean(data[data$num_layers == 3, "accuracy"])
median_4_accuracy <- mean(data[data$num_layers == 4, "accuracy"])
median_5_accuracy <- mean(data[data$num_layers == 5, "accuracy"])
median_6_accuracy <- mean(data[data$num_layers == 6, "accuracy"])
View(data2)
View(data2)
data2$num_layers <- as.factor(data2$num_layers)
data2$patch_size <- as.factor(data2$patch_size)
data$pos_embedding <- as.factor(data$pos_embedding)
model <- lm(accuracy ~ pos_embedding + patch_size + num_layers, data = data2)
data2 <- read.csv('part2_model_results.csv')
data2$num_layers <- as.factor(data2$num_layers)
data2$patch_size <- as.factor(data2$patch_size)
data$pos_embedding <- as.factor(data$pos_embedding)
model <- lm(accuracy ~ pos_embedding + patch_size + num_layers, data = data2)
summary(model)
learnable_data <- data2[data2$pos_embedding == "Learnable", ]
learnable_data
model <- lm(accuracy ~ patch_size + num_layers, data = learnable_data)
summary(model)
model <- lm(accuracy ~ pos_embedding + patch_size + num_layers, data = data2)
summary(model)
data$pos_embedding <- as.factor(data$pos_embedding)
data <- read.csv('Part1_model_results.csv')
data$pos_embedding <- as.factor(data$pos_embedding)
data <- read.csv('Part1_model_results.csv')
data$pos_embedding <- as.factor(data$pos_embedding)
model <- lm(accuracy ~ pos_embedding + patch_size + num_layers, data = data2)
summary(model)
median_6_accuracy <- mean(data[data, "accuracy"])
median_6_accuracy <- mean(data["accuracy"])
median_6_accuracy <- mean(data$accuracy)
mean_acc <- mean(data$accuracy)
mean_acc
mean_acc2 <- mean(data2$accuracy)
mean_acc2
mean_acc2 <- median(data2$accuracy)
mean_acc2
mean_acc2 <- median(data2$accuracy)
mean_acc2
mean_acc <- median(data$accuracy)
mean_acc
